{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDateTime = document.querySelector('input#datetime-picker');\nconst startBtn = document.querySelector('.timer-button');\n\nlet date = new Date();\nlet dateGetTime = date.getTime();\n\nlet userSelectedDate;\nlet userSelectedDateGetTime;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    userSelectedDateGetTime = userSelectedDate.getTime();\n    console.log(userSelectedDateGetTime);\n\n    if (userSelectedDateGetTime <= date.getTime()) {\n      startBtn.setAttribute('disabled', 'true');\n\n      return izitoast.error({\n        title: '',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.removeAttribute('disabled');\n    }\n  },\n};\n\nflatpickr(inputDateTime, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst days = document.querySelector('.value[data-days]');\nconst hours = document.querySelector('.value[data-hours]');\nconst minutes = document.querySelector('.value[data-minutes]');\nconst seconds = document.querySelector('.value[data-seconds]');\n\nstartBtn.addEventListener('click', event => {\n  event.preventDefault();\n\n  function timer() {\n    let ms = userSelectedDateGetTime - dateGetTime;\n    let objectConvertMs = convertMs(ms);\n    ms = ms - 1000;\n    objectConvertMs;\n    days.textContent = objectConvertMs.days;\n    hours.textContent = objectConvertMs.hours;\n    minutes.textContent = objectConvertMs.minutes;\n    seconds.textContent = objectConvertMs.seconds;\n    if (ms <= 0) {\n      clearInterval(counter);\n      return;\n    }\n  }\n  const counter = setInterval(timer, 1000);\n\n  return;\n});\n"],"names":["inputDateTime","startBtn","date","dateGetTime","userSelectedDate","userSelectedDateGetTime","options","selectedDates","izitoast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","timer","objectConvertMs","counter"],"mappings":"2FAKA,MAAMA,EAAgB,SAAS,cAAc,uBAAuB,EAC9DC,EAAW,SAAS,cAAc,eAAe,EAEvD,IAAIC,EAAO,IAAI,KACXC,EAAcD,EAAK,UAEnBE,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAMrB,GALA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAClCF,EAA0BD,EAAiB,UAC3C,QAAQ,IAAIC,CAAuB,EAE/BA,GAA2BH,EAAK,UAClC,OAAAD,EAAS,aAAa,WAAY,MAAM,EAEjCO,EAAS,MAAM,CACpB,MAAO,GACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDP,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEAQ,EAAUT,EAAeM,CAAO,EAEhC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAMA,MAAMH,EAAO,SAAS,cAAc,mBAAmB,EACjDC,EAAQ,SAAS,cAAc,oBAAoB,EACnDC,EAAU,SAAS,cAAc,sBAAsB,EACvDC,EAAU,SAAS,cAAc,sBAAsB,EAE7Dd,EAAS,iBAAiB,QAASe,GAAS,CAC1CA,EAAM,eAAc,EAEpB,SAASC,GAAQ,CACf,IAAIN,EAAKN,EAA0BF,EAC/Be,EAAkBR,EAAUC,CAAE,EAOlC,GANAA,EAAKA,EAAK,IAEVC,EAAK,YAAcM,EAAgB,KACnCL,EAAM,YAAcK,EAAgB,MACpCJ,EAAQ,YAAcI,EAAgB,QACtCH,EAAQ,YAAcG,EAAgB,QAClCP,GAAM,EAAG,CACX,cAAcQ,CAAO,EACrB,MACD,CACF,CACD,MAAMA,EAAU,YAAYF,EAAO,GAAI,CAGzC,CAAC"}